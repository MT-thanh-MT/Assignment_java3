/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DAO.QuanLyDiemDAO;
import DAO.QuanLySinhVienDAO;
import Model.ConnectionSQL.DatabaseHelper;
import Model.SinhVien;
import java.awt.Color;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author XUÂN THÀNH
 */
public class QuanLySinhVienPanel extends javax.swing.JPanel {

    private QuanLySinhVienDAO qlsv;
    private DefaultTableModel dtm;
    private ImageIcon defaultIcon = new ImageIcon(getClass()
            .getResource("/Images/user.jpg"));

    /**
     * Creates new form QuanLySinhVienPanel
     */
    public QuanLySinhVienPanel() {
        initComponents();

        this.qlsv = new QuanLySinhVienDAO();
        this.dtm = (DefaultTableModel) tblQLSV.getModel();

        //Thread đổi màu chữ
        Runnable setColorTitle = new Runnable() {
            @Override
            public void run() {
                int i = 0;
                while (true) {
                    if (i > 15) {
                        i = 0;
                    }
                    if (i == 0) {
                        lblTitle.setForeground(Color.red);
                    }

                    if (i == 5) {
                        lblTitle.setForeground(Color.BLUE);
                    }

                    if (i == 10) {
                        lblTitle.setForeground(Color.black);
                    }

                    i++;
                    try {
                        Thread.sleep(300);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(QuanLySinhVienPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
        };

        Thread t = new Thread(setColorTitle);
        t.start();
        //Thread giờ hệ thống
        new Thread() {
            @Override
            public void run() {
                while (true) {
                    Calendar now = Calendar.getInstance();
                    int h = now.get(Calendar.HOUR);
                    int m = now.get(Calendar.MINUTE);
                    int s = now.get(Calendar.SECOND);

                    lblOclock.setText(h + ":" + m + ":" + s);
                }
            }

        }.start();
        fillTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQLSV = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lblMaSV = new javax.swing.JLabel();
        lblErrorMaSV = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        lblHoTen = new javax.swing.JLabel();
        lblErrorHoTen = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblErrorEmail = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblErrorSDT = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        lblGioiTinh = new javax.swing.JLabel();
        lblSDT = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();
        rdoNu = new javax.swing.JRadioButton();
        rdoNam = new javax.swing.JRadioButton();
        lblDiaChi = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaDiaChi = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        btnTaoMoi = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnCapNhap = new javax.swing.JButton();
        lblOclock = new javax.swing.JLabel();
        lblErrorDiaChi = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(184, 227, 219));

        tblQLSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SV", "Họ Tên", "Email", "Số ĐT", "Giới TÍnh", "Địa Chỉ", "Hình"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQLSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQLSVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQLSV);

        jPanel2.setBackground(new java.awt.Color(197, 180, 253));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblMaSV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMaSV.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMaSV.setText("Mã SV:");

        lblErrorMaSV.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        lblErrorMaSV.setForeground(new java.awt.Color(255, 51, 51));

        txtMaSV.setForeground(new java.awt.Color(204, 0, 0));
        txtMaSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMaSVMouseClicked(evt);
            }
        });

        txtHoTen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtHoTenMouseClicked(evt);
            }
        });

        lblHoTen.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblHoTen.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHoTen.setText("Họ Tên:");

        lblErrorHoTen.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        lblErrorHoTen.setForeground(new java.awt.Color(255, 51, 51));

        txtEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEmailMouseClicked(evt);
            }
        });

        lblErrorEmail.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        lblErrorEmail.setForeground(new java.awt.Color(255, 51, 51));

        lblEmail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEmail.setText("Email:");

        lblErrorSDT.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        lblErrorSDT.setForeground(new java.awt.Color(255, 51, 51));

        txtSDT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSDTMouseClicked(evt);
            }
        });

        lblGioiTinh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblGioiTinh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGioiTinh.setText("Giới Tính:");

        lblSDT.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSDT.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSDT.setText("Số ĐT:");

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/LyLX.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        buttonGroup1.add(rdoNu);
        rdoNu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNu.setText("Nữ");

        buttonGroup1.add(rdoNam);
        rdoNam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");

        lblDiaChi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDiaChi.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDiaChi.setText("Địa Chỉ:");

        txaDiaChi.setColumns(20);
        txaDiaChi.setRows(5);
        txaDiaChi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txaDiaChiMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(txaDiaChi);

        jPanel4.setBackground(new java.awt.Color(197, 180, 253));
        jPanel4.setLayout(new java.awt.GridLayout(2, 2, 20, 20));

        btnTaoMoi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnTaoMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Add.png"))); // NOI18N
        btnTaoMoi.setText("Tạo mới");
        btnTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMoiActionPerformed(evt);
            }
        });
        jPanel4.add(btnTaoMoi);

        btnLuu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Save as.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });
        jPanel4.add(btnLuu);

        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Delete.png"))); // NOI18N
        btnXoa.setText(" Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel4.add(btnXoa);

        btnCapNhap.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCapNhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Edit.png"))); // NOI18N
        btnCapNhap.setText("Sửa");
        btnCapNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhapActionPerformed(evt);
            }
        });
        jPanel4.add(btnCapNhap);

        lblOclock.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblOclock.setForeground(new java.awt.Color(214, 86, 40));
        lblOclock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOclock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Clock.png"))); // NOI18N
        lblOclock.setText("00:00:00");

        lblErrorDiaChi.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        lblErrorDiaChi.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(46, 46, 46)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblErrorEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(46, 46, 46)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblErrorSDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(lblMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(46, 46, 46)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblErrorMaSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtMaSV, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(lblHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(46, 46, 46)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblErrorHoTen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblErrorDiaChi)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(rdoNam)
                        .addGap(48, 48, 48)
                        .addComponent(rdoNu)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(lblOclock, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblErrorDiaChi, lblErrorEmail, lblErrorHoTen, lblErrorMaSV, lblErrorSDT, txtEmail, txtHoTen, txtMaSV, txtSDT});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblErrorMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblOclock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMaSV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblErrorHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHoTen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblErrorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblErrorSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGioiTinh)
                            .addComponent(rdoNu)
                            .addComponent(rdoNam)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblErrorDiaChi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiaChi)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblErrorDiaChi, lblErrorSDT});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtEmail, txtHoTen, txtMaSV, txtSDT});

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Quản Lý Sinh Viên");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(316, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMaSVMouseClicked
        String cmd = "ma";
        changeTxtBackgroundColor(cmd);
    }//GEN-LAST:event_txtMaSVMouseClicked

    private void txtHoTenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtHoTenMouseClicked
        String cmd = "ten";
        changeTxtBackgroundColor(cmd);
    }//GEN-LAST:event_txtHoTenMouseClicked

    private void txtEmailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEmailMouseClicked
        String cmd = "email";
        changeTxtBackgroundColor(cmd);
    }//GEN-LAST:event_txtEmailMouseClicked

    private void txtSDTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSDTMouseClicked
        String cmd = "sdt";
        changeTxtBackgroundColor(cmd);
    }//GEN-LAST:event_txtSDTMouseClicked

    private void txaDiaChiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txaDiaChiMouseClicked
        String cmd = "diachi";
        changeTxtBackgroundColor(cmd);
    }//GEN-LAST:event_txaDiaChiMouseClicked

    private void btnTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMoiActionPerformed
        clearForm();
    }//GEN-LAST:event_btnTaoMoiActionPerformed

    private void tblQLSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQLSVMouseClicked
        int row = this.tblQLSV.getSelectedRow();
        if (row >= 0) {
            String maSV = (String) this.tblQLSV.getValueAt(row, 0);
            fillForm(maSV);

        }
    }//GEN-LAST:event_tblQLSVMouseClicked

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        if (checkForm() == false) {
            return;
        }

        int xn = JOptionPane.showConfirmDialog(this, "Ban có muốn thêm sinh viên mới không?");
        if (xn == JOptionPane.YES_OPTION) {
            try {
                if (this.qlsv.timTheoMa(getThongTinhSV().getMASV()) == null) {
                    this.qlsv.insert(getThongTinhSV());
                    JOptionPane.showMessageDialog(this, "Thêm mới thành công");
                    fillTable();
                    clearForm();
                } else {
                    JOptionPane.showMessageDialog(this, "Mã sinh viên này đã tồn tại. vui lòng chọn cập nhập nếu bạn muốn sửa thông tin sinh viên");
                    return;
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnCapNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhapActionPerformed
        if (checkForm() == false) {
            return;
        }
        int xn = JOptionPane.showConfirmDialog(this, "Ban có muốn cập nhập sinh viên này không?");
        if (xn == JOptionPane.YES_OPTION) {
            try {
                if (this.qlsv.timTheoMa(getThongTinhSV().getMASV()) != null) {
                    this.qlsv.update(getThongTinhSV());
                    JOptionPane.showMessageDialog(this, "Đã cập nhập thành công");
                    fillTable();
                    clearForm();
                } else {
                    JOptionPane.showMessageDialog(this, "Mã sinh viên này không tồn tại. vui lòng chọn lưu nếu bạn muốn thêm mới thông tin sinh viên");
                    return;
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnCapNhapActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        String maSV = txtMaSV.getText();
        if (maSV.equals("")) {
            maSV = JOptionPane.showInputDialog("Nhập mã sinh viên muốn xóa");
            if (maSV == null)return;
        }
        int xn = JOptionPane.showConfirmDialog(this, "Ban có muốn Xóa sinh viên này không?");
        if (xn == JOptionPane.YES_OPTION) {
            try {
                if (this.qlsv.timTheoMa(getThongTinhSV().getMASV()) != null) {
                    this.qlsv.delete(maSV);
                    JOptionPane.showMessageDialog(this, "Đã xóa thành công");
                    fillTable();
                    clearForm();
                } else {
                    JOptionPane.showMessageDialog(this, "Mã sinh viên này không tồn tại");
                    return;
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
       
    }//GEN-LAST:event_btnXoaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhap;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnTaoMoi;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblErrorDiaChi;
    private javax.swing.JLabel lblErrorEmail;
    private javax.swing.JLabel lblErrorHoTen;
    private javax.swing.JLabel lblErrorMaSV;
    private javax.swing.JLabel lblErrorSDT;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblHoTen;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblMaSV;
    private javax.swing.JLabel lblOclock;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblQLSV;
    private javax.swing.JTextArea txaDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtSDT;
    // End of variables declaration//GEN-END:variables
    public void changeTxtBackgroundColor(String cmd) {
        if (cmd.equals("ma")) {
            txtMaSV.setBackground(new java.awt.Color(255, 255, 204));
        } else {
            txtMaSV.setBackground(Color.white);
        }

        if (cmd.equals("email")) {
            txtEmail.setBackground(new java.awt.Color(255, 255, 204));
        } else {
            txtEmail.setBackground(Color.white);
        }

        if (cmd.equals("ten")) {
            txtHoTen.setBackground(new java.awt.Color(255, 255, 204));
        } else {
            txtHoTen.setBackground(Color.white);
        }

        if (cmd.equals("sdt")) {
            txtSDT.setBackground(new java.awt.Color(255, 255, 204));
        } else {
            txtSDT.setBackground(Color.white);
        }

        if (cmd.equals("diachi")) {
            txaDiaChi.setBackground(new java.awt.Color(255, 255, 204));
        } else {
            txaDiaChi.setBackground(Color.white);
        }
    }

    public void fillTable() {
        this.dtm.setRowCount(0);
        String sql = "select * from STUDENTS";

        try {
            try (Connection con = DatabaseHelper.openConnection();
                    Statement stm = con.createStatement();
                    ResultSet rs = stm.executeQuery(sql)) {

                while (rs.next()) {
                    Object[] data = new Object[]{
                        rs.getString("_MASV"),
                        rs.getString("_HoTen"),
                        rs.getString("_Email"),
                        rs.getString("_SDT"),
                        rs.getString("_GioiTinh"),
                        rs.getString("_DiaChi"),
                        rs.getString("_Hinh")
                    };
                    this.dtm.addRow(data);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void fillForm(String maSV) {
        SinhVien sv = new SinhVien();
        try {
            sv = this.qlsv.timTheoMa(maSV);
            if (sv == null) {
                JOptionPane.showMessageDialog(this, "Mã Sinh Viên Không Tồn Tại");
                return;
            }
            this.txtMaSV.setText(sv.getMASV());
            this.txtHoTen.setText(sv.getHoTen());
            this.txtEmail.setText(sv.getEmail());
            this.txtSDT.setText(sv.getSDT());
            this.txaDiaChi.setText(sv.getDiaChi());
            if (sv.getGioiTinh() == 1) {
                this.rdoNam.setSelected(true);
            } else {
                this.rdoNu.setSelected(true);
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    public void clearForm() {
        this.txtEmail.setText("");
        this.txtHoTen.setText("");
        this.txtMaSV.setText("");
        this.txtSDT.setText("");
        this.rdoNam.setSelected(true);
        this.txaDiaChi.setText("");

        this.lblImage.setIcon(defaultIcon);
        
        this.txtEmail.setBackground(Color.white);
        this.txtHoTen.setBackground(Color.white);
        this.txtMaSV.setBackground(Color.white);
        this.txtSDT.setBackground(Color.white);        
        this.txaDiaChi.setBackground(Color.white);
        
        this.lblErrorDiaChi.setText("");
        this.lblErrorEmail.setText("");
        this.lblErrorHoTen.setText("");
        this.lblErrorMaSV.setText("");
        this.lblErrorSDT.setText("");
        
    }

    public boolean checkForm() {
        boolean a = true;
        String maSV, HoTen, email, sdt, diaChi;
        maSV = this.txtMaSV.getText();
        HoTen = this.txtHoTen.getText();
        email = this.txtEmail.getText();
        sdt = this.txtSDT.getText();
        diaChi = this.txaDiaChi.getText();

        if (maSV.equals("")) {
            this.lblErrorMaSV.setText("Bạn chưa nhập Mã sinh viên");
            this.txtMaSV.setBackground(Color.yellow);
            a = false;
        } else if (!maSV.equals("")) {
            if (!maSV.substring(0, 2).equals("PH")) {
                this.lblErrorMaSV.setText("Mã sinh viên phải bắt đầu bằng 'PH'");
                this.txtMaSV.setBackground(Color.yellow);
                a = false;
            } else {
                this.lblErrorMaSV.setText("");
                this.txtMaSV.setBackground(Color.white);
            }

        } else {
            this.lblErrorMaSV.setText("");
            this.txtMaSV.setBackground(Color.white);
        }

        if (HoTen.equals("")) {
            this.lblErrorHoTen.setText("Bạn chưa nhập Họ Tên");
            this.txtHoTen.setBackground(Color.yellow);
            a = false;
        } else {
            this.lblErrorHoTen.setText("");
            this.txtHoTen.setBackground(Color.white);
        }

        if (email.equals("")) {
            this.lblErrorEmail.setText("Bạn chưa nhập Email");
            this.txtEmail.setBackground(Color.yellow);
            a = false;
        } else if (!email.equals("")) {
            Pattern p = Pattern.compile("^\\w+@+[a-zA-Z]+(\\.[a-zA-Z]+){1,2}$");
            if (!p.matcher(email).find()) {
                this.lblErrorEmail.setText("Không đúng định dạng! Email phải có ký tự @!");
                this.txtEmail.setBackground(Color.yellow);
                a = false;
            } else {
                this.lblErrorEmail.setText("");
                this.txtEmail.setBackground(Color.white);
            }
        } else {
            this.lblErrorEmail.setText("");
            this.txtEmail.setBackground(Color.white);
        }

        if (sdt.equals("")) {
            this.lblErrorSDT.setText("Bạn chưa nhập Số Điện Thoại");
            this.txtSDT.setBackground(Color.yellow);
            a = false;
        } else if (!sdt.equals("")) {
            try {
                Integer.parseInt(sdt);
                if (sdt.length() > 15) {
                    this.lblErrorSDT.setText("Số điện thoại không được quá 15 ký tự");
                    this.txtSDT.setBackground(Color.yellow);
                    a = false;
                } else {
                    this.lblErrorSDT.setText("");
                    this.txtSDT.setBackground(Color.white);
                }
            } catch (Exception e) {
                e.printStackTrace();
                this.lblErrorSDT.setText("Số điện thoại phải là 1 dãy số!");
                this.txtSDT.setBackground(Color.yellow);
                a = false;
            }
        } else {
            this.lblErrorSDT.setText("");
            this.txtSDT.setBackground(Color.white);
        }

        if (diaChi.equals("")) {
            this.lblErrorDiaChi.setText("Bạn chưa nhập Địa Chỉ");
            this.txaDiaChi.setBackground(Color.yellow);
            a = false;
        } else {
            this.lblErrorDiaChi.setText("");
            this.txaDiaChi.setBackground(Color.white);
        }

        return a;
    }

    public SinhVien getThongTinhSV() {
        String maSV, HoTen, email, sdt, diaChi;
        maSV = this.txtMaSV.getText();
        HoTen = this.txtHoTen.getText();
        email = this.txtEmail.getText();
        sdt = this.txtSDT.getText();
        diaChi = this.txaDiaChi.getText();
        SinhVien sv = new SinhVien();
        sv.setDiaChi(diaChi);
        sv.setEmail(email);
        sv.setHoTen(HoTen);
        sv.setMASV(maSV);
        sv.setSDT(sdt);
        sv.setGioiTinh(this.rdoNam.isSelected() == true ? 1 : 0);
        return sv;
    }
}
